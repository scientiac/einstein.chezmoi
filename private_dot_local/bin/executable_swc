#!/usr/bin/env bash

# Directories
LIGHT_DIR=~/Pictures/Wallpapers/light
DARK_DIR=~/Pictures/Wallpapers/dark
LIGHT_CACHE=~/.cache/light_wall
DARK_CACHE=~/.cache/dark_wall
BLUR_CACHE_DIR=~/.cache/wallpaper_blur

# Create blur cache directory if it doesn't exist
mkdir -p "$BLUR_CACHE_DIR"

# Set directory and cache file based on argument
if [[ "$1" == "light" ]]; then
	WALL_DIR="$LIGHT_DIR"
	CACHE_FILE="$LIGHT_CACHE"
elif [[ "$1" == "dark" ]]; then
	WALL_DIR="$DARK_DIR"
	CACHE_FILE="$DARK_CACHE"
else
	echo "Usage: $0 [light|dark]"
	exit 1
fi

# Get all wallpapers alphabetically
mapfile -t WALLPAPERS < <(find "$WALL_DIR" -type f | sort)
TOTAL=${#WALLPAPERS[@]}

if [[ $TOTAL -eq 0 ]]; then
	echo "No wallpapers found in $WALL_DIR"
	exit 1
fi

# Get current index from cache file
if [[ -f "$CACHE_FILE" ]]; then
	CURRENT=$(cat "$CACHE_FILE")
else
	CURRENT=0
fi

# Calculate next index (wrap around if needed)
NEXT=$(((CURRENT + 1) % TOTAL))

# Get the selected wallpaper
SELECTED_WALLPAPER="${WALLPAPERS[$NEXT]}"

# Generate blur cache filename based on original wallpaper path
WALLPAPER_BASENAME=$(basename "$SELECTED_WALLPAPER")
WALLPAPER_NAME="${WALLPAPER_BASENAME%.*}"
WALLPAPER_EXT="${WALLPAPER_BASENAME##*.}"
BLUR_WALLPAPER="$BLUR_CACHE_DIR/${WALLPAPER_NAME}_blur.${WALLPAPER_EXT}"

# Create blurred version if it doesn't exist
if [[ ! -f "$BLUR_WALLPAPER" ]]; then
	echo "Creating blurred version of $WALLPAPER_BASENAME..."
	magick "$SELECTED_WALLPAPER" -blur 0x20 "$BLUR_WALLPAPER"
	if [[ $? -ne 0 ]]; then
		echo "Error: Failed to create blurred wallpaper"
		exit 1
	fi
fi

# Set both wallpapers simultaneously
echo "Setting wallpapers..."
swww img "$BLUR_WALLPAPER" -n wp-back &
swww img "$SELECTED_WALLPAPER" -n wp-front &

# Wait for both commands to complete
wait

# Save next index to cache file
echo "$NEXT" >"$CACHE_FILE"

echo "Wallpapers set: Front layer and blurred back layer"
